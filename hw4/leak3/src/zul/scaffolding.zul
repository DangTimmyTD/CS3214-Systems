<?xml version="1.0" encoding="UTF-8"?>

<!--
  An example of what an application using ZK might look like.

  Uses JavaBeans/Castor to read config file.

  Relies on classes in WEB-INF/lib/libx-xml-binding.jar

  $Id: scaffolding.zul,v 1.80 2010/06/03 19:15:14 vsony7 Exp $

-->
		
<window xmlns:html="http://www.w3.org/1999/xhtml" id="root" use="org.libx.editionbuilder.MainWindowController">
	<style src="../styles/editionbuilder.css" />
	<script type="text/javascript" src="utility.js" />
	
	<zscript>
		import org.libx.xml.*;
		import org.libx.editionbuilder.*;
		
		Model.initializeDesktop();
		root.initialize();
	</zscript>
	
	<?component name="signonbox" inline="true" macro-uri="signon.zul" ?>
	
	<!-- We probably won't get this done before releasing it.
		<?component name="mockuptoolbar" inline="true" macro-uri="toolbar.zul" ?>
		<mockuptoolbar id="mockup"/>
	-->
	
	<html:h2 align="center">
		LibX Edition Builder
	</html:h2>
	<tabbox width="100%">
		<tabs>
			<tab label="All Editions" id="alleditiontab" visible="true" />
			<tab label="My Editions" id="starttab" visible="true" />
			<tab label="Current Edition" id="editiontab" visible="false" />
			<tab label="Shortcuts" id="linkstab" visible="false" />
			<tab label="Catalogs &amp; Databases" id="cattab" visible="false" />
			<tab label="OpenURL Resolvers" id="openurltab" visible="false" />
			<tab label="Proxy Access" id="eztab" visible="false" />
			<tab label="Options" id="optionstab" visible="false" />
			<tab label="File Management" id="additionalfilestab" visible="false" />
			<zscript>
				Tab[] tabs = {editiontab,linkstab,cattab,openurltab,eztab,optionstab,additionalfilestab};
				
				MainWindowController.registerTabs(tabs);
			</zscript>
		</tabs>
		
		<tabpanels>
			<tabpanel id="alleditiontabpanel">
				<vbox hflex="1">
					<hbox hflex="1">
						<vbox>
							<html:b>Search or browse public LibX editions.</html:b>
							If you believe you should be the maintainer of an edition, register your email
							address in the "My Editions" Tab first, then select an edition and request
							ownership.
							<hbox>
								Search by name or description:
								<textbox id="allListSearch" 
								onChange="allListBox.search(allListSearch.value);" 
								action="onkeydown:fireSubmitOnEnter(event,#{allListSearch},#{allListSearchButton});" />
								<button id="allListSearchButton" label="Search" 
								onClick="allListBox.search(allListSearch.value);" />
								<html id="allListSearchResults" />
							</hbox>
						</vbox>
						<vbox>
							<html:b>Build a new LibX edition from scratch.</html:b>
							<hbox>
								You can also go ahead and build your own edition from scratch.
								<button id="newEditionLoad" label="Build A New Edition" height="50px" 
								onClick="editionListVbox.loadNewModel();" />
							</hbox>
						</vbox>
					</hbox>
					<listbox id="allListBox" 
						use="org.libx.editionbuilder.AllEditionsListBoxController">
						<listhead sizable="true">
							<listheader label="  " /><!-- used for icon -->
							<listheader label="Id" />
							<listheader label="Edition Description" />
						</listhead>
					</listbox>
					<paging id="allListPaging" pageSize="20" />
					<button label="Refresh" onClick="allListBox.refresh();" />
					<hbox hflex="1" id="allListSelectedEditionInfo">
						<!-- AllEditionsListBoxController places information about currently selected edition here -->
					</hbox>
				</vbox>
			</tabpanel>
			
			<tabpanel id="starttabpanel">
				<vbox>
					<hbox>
						<signonbox />
						<vbox id="builderControlBox" use="org.libx.editionbuilder.BuilderBoxController">
							Builder Box - control operations such as building an edition.
							Maybe this should go in the "Current Edition" tab?
							<hbox id="builderButtons">
								<!-- for now, static - but these buttons will be added dynamically -->
								<button onClick="Builder.makeNewRevision();" 
									label="Make New Revision (From Current)"/>
								<button id="buildButton" onClick="Builder.build();" label="Build"/>
								<zscript>
									buildButton.setVisible(false);
									builderControlBox.registerBuildbutton(buildButton);
								</zscript>
							</hbox>
							<html id="builderInformation" />
						</vbox>
						<zscript>
							builderControlBox.initialize(builderButtons, builderInformation);
						</zscript>
					</hbox>
					<hbox>
						<vbox id="editionListVbox" width="500px" use="org.libx.editionbuilder.EditionListVboxController">
						</vbox>
						<vbox id="revisionListVbox" width="200px" use="org.libx.editionbuilder.EditionListVboxController$RevisionListVboxController">
						</vbox>
						<zscript>
							editionListVbox.initialize(revisionListVbox);
							revisionListVbox.initialize(editionListVbox);
						</zscript>
					</hbox>
				</vbox>
			</tabpanel>
			<tabpanel id="editionController" use="org.libx.editionbuilder.EditionTabController">
				Edition Information:
				<zscript>
					editionController.initialize();
				</zscript>
			</tabpanel>
			
			<tabpanel>
				<html:div>
					At the top-left of the toolbar, you can add a number of shortcuts for
					your users.  These must be complete URLs, such as http://libx.org.
					To change the order in which the links will be displayed, drag and drop
					the entries in the desired order.
				</html:div>
				<vbox hflex="1" id="linksController" use="org.libx.editionbuilder.LinksController">
					<vbox id="urlbox" />
					<button label="Add Link" 
					onClick="linksController.newLink()" />
					<zscript>
						linksController.initialize(urlbox);
					</zscript>
				</vbox>
			</tabpanel>
			
			<tabpanel id="catalogsTabController" use="org.libx.editionbuilder.CatalogsTabController">
				<html:div>
					Configure the catalogs and databases that are included in your edition.
					LibX can try to auto-detect your catalog.  It will also cross-check
					other editions whether a particular catalog has already been configured.
					To change the order in which catalogs appear in your edition,
					drag and drop each catalog's entry.
				</html:div>
				<hbox hflex="1" >
					<vbox>
						<html:div>
							To attempt auto-detection, enter your catalog's hostname below.
							Enter the name of the machine that runs your library catalog.
							For instance, try addison.vt.edu or worldcat.org.
						</html:div>
						<vbox id="catalogUrl" use="org.libx.editionbuilder.CatalogsTabController$Urlbox" />
						Alternatively, select a supported catalog type below and choose "Add Catalog."
						<hbox>
							<combobox readonly="true" id="catalogChoice">
								<comboitem value="millenium"       label="III Millennium" />
								<comboitem value="sirsi"           label="Sirsi" />
								<comboitem value="aleph"           label="Ex Libris Aleph" />
								<comboitem value="voyager"         label="Voyager" />
								<comboitem value="horizon"         label="Horizon iPac" />
								<comboitem value="centralsearch"   label="Serials Solutions Central Search" />
								<comboitem value="sersol"          label="Serials Solutions Journal List" />
								<comboitem value="sfx"             label="SFX Journal List" />
								<comboitem value="bookmarklet"     label="Bookmarklet" />
								<comboitem value="scholar"         label="Google Scholar" />
								<comboitem value="openurlresolver" label="OpenURL Resolver" />
								<comboitem value="web2"            label="Web2" />
							</combobox>
							<button label="Add Catalog" onClick="catalogsTabController.addCatalog(catalogChoice)" />
						</hbox>
					</vbox>
					<vbox id="catalogTabRightPanel" 
					use="org.libx.editionbuilder.CatalogsTabController$CatalogList" />
					<zscript>
						catalogsTabController.initialize(catalogTabRightPanel);
						catalogUrl.initialize(catalogTabRightPanel);
					</zscript>
				</hbox>
			</tabpanel>
			
			<tabpanel id="openurlController" use="org.libx.editionbuilder.OpenUrlTabsController">
				<html:div>
					Configure the OpenURL resolvers configured in your edition.
					You may configure as many OpenURL resolvers as you like.
					To change the order in which the OpenURL resolvers appear in your edition,
					drag and drop the OpenURL entries in the desired position.
				</html:div>
				<hbox hflex="1">
					<vbox id="resolverTabLeftVbox">
						<html:div>
							If you know the settings of the OpenURL resolver you want to add,
							add a new resolver and fill out the form to the right.
						</html:div>
						<button label="Add New OpenURL Resolver" onClick="openurlController.addResolver();" />
						<html:hr />
						<html:div>Or, you can search the
							<html:a target="_new" href="http://www.oclc.org/productworks/urlresolver.htm">
							OCLC OpenURL Resolver Registry</html:a> by IP address or hostname.
							For instance, try entering www.lib.vt.edu or 128.173.124.81
						</html:div>
						<textbox id="openurlIpAddr" />
						<button label="Search OCLC Registry" onClick="openurlController.searchRegistry(openurlIpAddr.value);" />
						<label id="openurlError" />
						<!-- the auto-detection will add entries here -->
					</vbox>
					<vbox id="resolverList" 
						use="org.libx.editionbuilder.OpenUrlTabsController$ResolverList" />
				</hbox>
				<zscript>
					openurlController.initialize(resolverTabLeftVbox, resolverList, openurlError);
				</zscript>
			</tabpanel>
			
			<tabpanel id="proxyController" use="org.libx.editionbuilder.ProxyTabsController">
				<html:div>
					Configure the proxy services that are included in your edition.
					Currently, LibX supports Useful Utilities's <html:a target="_new" href="http://www.usefulutilities.com/">EZProxy</html:a>
					service and III's <html:a target="_new" href="http://www.iii.com/mill/digital.shtml#wam">Web Access Management (WAM)</html:a>.
					Multiple proxies can be configured.
					To change the order in which proxies appear in your edition,
					drag and drop each proxy's entry.
				</html:div>
				<hbox hflex="1S">
					<vbox hflex="1" id="proxyChoiceButtonVbox" />
					<vbox hflex="1" id="proxyList" use="org.libx.editionbuilder.ProxyTabsController$ProxyList" />
					<zscript>
						proxyController.initialize(proxyList, proxyChoiceButtonVbox);
					</zscript>
				</hbox>
			</tabpanel>
				
			<tabpanel>
				<html:div>
				</html:div>
				<grid>
					<columns>
						<column align="left" label="Option" />
						<column align="left" label="Value" />
					</columns>
					<rows id="optionsController" use="org.libx.editionbuilder.OptionsTabController"/>
				</grid>
				<zscript>
					optionsController.initialize();
				</zscript>
				
				<html:br/>
				<html:b>Search Options:</html:b>
				<grid>
					<columns>
						<column align="left" label="Label" />
						<column align="left" label="Value" />
						<column align="left" label="Delete" />
					</columns>
					<rows id="searchoptionsController" use="org.libx.editionbuilder.OptionsTabController$SearchOptionsTabController"/>
				</grid>
				<zscript>
					searchoptionsController.initialize();
				</zscript>
				<button label="Add" onClick="searchoptionsController.addNewSearchOption();" />
			</tabpanel>
			
			<tabpanel>
				<html:div>
					Use this tab to manage the files included in your edition.
					You can upload images and other files that will be bundled with your
					edition.  You can also specify a URL from which to download files.
					You must upload images before you can set your edition's logos.
				</html:div>
				<vbox id="fileController" use="org.libx.editionbuilder.FileTabController" />
				<button label="Add a new image file">
					<attribute name="onClick">
						fileController.addNewFile("chrome/libx/skin/libx");
					</attribute>
				</button>
			</tabpanel>
		</tabpanels> 
	</tabbox>
	<vbox height="5px" />
	<vbox id="statusbox" />
	<!-- Listeners for the status bar-->
	<zscript>
		root.initialize(statusbox);
		allListBox.initialize(allListSelectedEditionInfo, allListPaging, allListSearchResults);
	</zscript>
</window>
<!-- vim: sw=2
-->
